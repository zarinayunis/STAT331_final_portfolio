---
title: "Lab 8"
author: "Zarina Yunis"
format: 
  html:
    self-contained: true
execute:
  error: true
  warning: false
  message: false
editor: visual
---

```{r}
#| include: false
library(dplyr)
library(glue)
library(stringr)
library(purrr)
library(english)
```

```{r}
xmas <- read.csv("https://www.dropbox.com/s/e584pryn8evm1gz/xmas.csv?dl=1")
```

1.  

```{r}
# Function that takes a noun and makes it plural
# Arguments -- gift -- A string or vector of strings
# Return -- A string or vector of strings with the pluralized words

pluralize_gift <- function(gift){

#gift <- if_else(str_detect(gift, "oo"), str_replace(gift, "oo", "ee"), 
                #str_c({gift}, "s"))
gift <- case_when(
  str_detect(gift, "oo") ~ str_replace(gift, "oo", "ee"),
  str_ends(gift, "y") ~ str_replace(gift, "y", "ies"),
  TRUE ~ str_c({gift}, "s")
)

return(gift)

}

pluralize_gift(xmas$Gift.Item)
```

2.  

```{r}
## This will work if your function is vectorized!
pluralize_gift(xmas$Gift.Item)

## This will work if your function is not vectorized!
purrr::map_chr(xmas$Gift.Item, pluralize_gift)
```

3.  

```{r}
make_phrase <- function(num_word, item, verb, adjective, location) {
  
  ## Step 1: Replace NAs with blank strings
  verb <- str_replace_na(verb, "")
  adjective <- str_replace_na(adjective, "")
  location <- str_replace_na(location, "")
  
  ## Step 2: If the day is larger than 1, the items need pluralized!
  item <- if_else(num_word != "one", pluralize_gift(item), item)
  
  ## Step 3: If the word starts with a vowel, add "an" to the beginning
  vowels = c('a', 'e', 'i', 'o', 'u')
  if_else(str_starts(item, vowels) == TRUE, str_c("an", item), item)
  
  ## Step 4: Glue all of the pieces together! 
  if_else(num_word == "one", 
          glue::glue("a ", " {item} ", "{location}"), 
          glue::glue("{num_word} ", "{adjective} ", "{item} ", "{verb}", "{location}"))

}
```

4.  

```{r}
xmas2 <- xmas |> 
  mutate(day.num = as.character(english::english(Day)
                                ), 
    Full.Phrase = pmap_chr(
      list(num_word = day.num,
           item = Gift.Item,
           verb = Verb,
           adjective = Adjective,
           location = Location),
      make_phrase
      )
  )
```

5.  

```{r}
sing_day <- function(dataset, line, phrase_col){
  
  # Step 1: Setup the intro line
  num_word <- english::ordinal(line)
  
  intro <- glue::glue("On the {num_word} day of Christmas")
  
  # Step 2: Sing the gift phrases

    phrases <- dataset |>
      pull( {{phrase_col}} )


  #phrases <- str_c(phrases[line:1], collapse = "\n")
  updated_phrases <- glue::glue_collapse(phrases[line:1], sep = "\n", last = "and \n")
    
  ## put it together
    
  glue::glue("{intro} ", "my true love gave to me: \n", "{updated_phrases}")

}
```

6.  

```{r}
xmas2 |>
  sing_day(line = 2, phrase_col = Full.Phrase)

map_chr(1:12, ~ sing_day(xmas2, .x, Full.Phrase)) |>
  str_c(collapse = "\n") |>
  cat()
```

7.  

```{r}
xmas2 <- xmas |>
  mutate(
    day.num = as.character(english::english(Day)), 
    Full.Phrase = pmap_chr(.l = list(num_word = day.num, 
                                     item = Gift.Item, 
                                     verb = Verb, 
                                     adjective = Adjective, 
                                     location = Location), 
                           .f = make_phrase)
  )

map_chr(1:12, ~sing_day(xmas2, .x, Full.Phrase)) |>
  str_c(collapse = "\n") |>
  cat()
```
